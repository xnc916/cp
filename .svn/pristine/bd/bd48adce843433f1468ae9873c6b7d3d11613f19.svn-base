package com.xiongyuan.lottery.mypage.activity;

import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ListView;
import android.widget.TextView;

import com.xiongyuan.lottery.R;
import com.xiongyuan.lottery.base.BaseActivity;
import com.xiongyuan.lottery.base.LotteryClient;
import com.xiongyuan.lottery.base.UICallBack;
import com.xiongyuan.lottery.mypage.adapter.RecordNumberAdapter;
import com.xiongyuan.lottery.mypage.bean.RecordNumberBean;
import com.xiongyuan.lottery.utils.ToastUtils;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.io.IOException;
import java.io.Serializable;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import butterknife.BindView;
import butterknife.OnClick;
import in.srain.cube.views.ptr.PtrClassicFrameLayout;
import in.srain.cube.views.ptr.PtrDefaultHandler2;
import in.srain.cube.views.ptr.PtrFrameLayout;
import okhttp3.Call;

public class RecordNumberActivity extends BaseActivity {
    @BindView(R.id.title_name)
    TextView titleName;
    private String userId;
    @BindView(R.id.list_record_number)
    ListView listView;
    @BindView(R.id.refreshLayout)
    PtrClassicFrameLayout refreshLayout;//刷新加载的控件
    @BindView(R.id.tv)
    TextView tv;
    private int p=0;
    private ArrayList<RecordNumberBean> list;
    private RecordNumberAdapter adapter;

    @Override
    public int getLayoutId() {
        return R.layout.activity_record_number;
    }

    @Override
    public void initView(Bundle savedInstanceState) {
        titleName.setText("追号记录");
        adapter=new RecordNumberAdapter(this);
        listView.setAdapter(adapter);
        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                Intent intent=new Intent(RecordNumberActivity.this,RecordNumberItemActivity.class);
                intent.putExtra("list",list.get(position));
                startActivity(intent);
            }
        });

        //初始化RefreshLayout
        //使用本对象作为key，用来记录上一次刷新的事件，如果两次下拉刷新间隔太近，不会触发刷新方法
        refreshLayout.setLastUpdateTimeRelateObject(this);
        //设置刷新时显示的背景色
        refreshLayout.setBackgroundResource(R.color.color_333333);
        //关闭header所耗时长
        refreshLayout.setDurationToCloseHeader(1500);
        //实现刷新，加载回调
        refreshLayout.setPtrHandler(new PtrDefaultHandler2() {
            @Override
            public void onLoadMoreBegin(PtrFrameLayout frame) {
                //加载更多时触发
                p++;
                getData(p);
            }

            @Override
            public void onRefreshBegin(PtrFrameLayout frame) {
                //刷新时触发
                getData(1);
            }
        });
    }
    @OnClick({R.id.title_left,R.id.tv})
    public void click(View view){
        switch (view.getId()){
            case R.id.title_left:
                finish();
                break;
            case R.id.tv:
                getData(1);
                break;
        }
    }
    @Override
    public void initData() {
        list=new ArrayList<>();
        userId = getIntent().getStringExtra("userId");
        getData(1);

    }
    //追号记录
    private void getData(int pageInt){
        if (pageInt==1){
            if (list.size()>0){
                list.clear();
            }
        }
        Call call = LotteryClient.getInstance().getzhuih(userId,pageInt+"");
        call.enqueue(new UICallBack() {
            @Override
            public void onFailureUI(Call call, IOException e) {
                ToastUtils.showToast(RecordNumberActivity.this, e.getMessage());
            }

            @Override
            public void onResponseUI(Call call, String body) {
                Log.e("++++++++++++",userId);
                Log.e("++++++++++++",body);
                try {
                    JSONObject jsonObject = new JSONObject(body);
                    String errormsg = jsonObject.optString("errormsg");
                    if (errormsg.equals("")) {
                        JSONObject object = jsonObject.optJSONObject("result");
                        JSONArray jsonArray = object.optJSONArray("data");
                        if (jsonArray.toString().equals("[]")){
                            tv.setVisibility(View.VISIBLE);
                            refreshLayout.setVisibility(View.GONE);
                            p=1;
                        }else {
                            tv.setVisibility(View.INVISIBLE);
                            refreshLayout.setVisibility(View.VISIBLE);
                            for (int i = 0; i < jsonArray.length(); i++) {
                                RecordNumberBean recordNumberBean = new RecordNumberBean();
                                JSONObject jsonObject1 = jsonArray.optJSONObject(i);
                                recordNumberBean.setAddTime(stampToDate(jsonObject1.optString("addTime")));
                                recordNumberBean.setBetAmount(jsonObject1.optString("betAmount"));
                                recordNumberBean.setEndTime(stampToDate(jsonObject1.optString("endTime")));
                                recordNumberBean.setGame_id(jsonObject1.optString("game_id"));
                                recordNumberBean.setIssueCount(jsonObject1.optString("issueCount"));
                                recordNumberBean.setProgress(jsonObject1.optString("progress"));
                                recordNumberBean.setStartTime(stampToDate(jsonObject1.optString("startTime")));
                                recordNumberBean.setStatus(jsonObject1.optString("status"));
                                recordNumberBean.setWinAmount(jsonObject1.optString("winAmount"));
                                recordNumberBean.setWinCount(jsonObject1.optString("winCount"));
                                recordNumberBean.setWinStop(jsonObject1.optString("winStop"));
                                list.add(recordNumberBean);
                            }
                            adapter.refresh(list);
                        }
                        refreshLayout.refreshComplete();
                    } else {
                        ToastUtils.showToast(RecordNumberActivity.this, errormsg);
                    }
                } catch (JSONException e) {
                    e.printStackTrace();
                }

            }
        });
    }
    /*
* 将时间戳转换为时间
*/

    public static String stampToDate(String s) {
        String res;
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        long lt = Long.valueOf(s);
        Date date = new Date(lt * 1000);
        res = simpleDateFormat.format(date);
        return res;
    }

}
