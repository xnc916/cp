package com.xiongyuan.lottery.homepage.activity;

import android.content.res.Resources;
import android.graphics.Color;
import android.os.Bundle;
import android.support.design.widget.TabLayout;
import android.support.v4.app.Fragment;
import android.support.v4.view.ViewPager;
import android.support.v7.widget.LinearLayoutManager;
import android.util.DisplayMetrics;
import android.util.Log;
import android.view.View;
import android.widget.TextView;

import com.jiang.android.indicatordialog.IndicatorBuilder;
import com.jiang.android.indicatordialog.IndicatorDialog;
import com.xiongyuan.lottery.R;
import com.xiongyuan.lottery.base.BaseActivity;
import com.xiongyuan.lottery.base.LotteryClient;
import com.xiongyuan.lottery.base.UICallBack;
import com.xiongyuan.lottery.homepage.bean.pkdata.BetDataBean;
import com.xiongyuan.lottery.homepage.fragment.BetShowFragment;
import com.xiongyuan.lottery.mypage.adapter.BaseAdapter;
import com.xiongyuan.lottery.mypage.adapter.BaseViewHolder;
import com.xiongyuan.lottery.mypage.adapter.SimpleFragmentPagerAdapter;
import com.xiongyuan.lottery.thirdpage.bean.Shil;
import com.xiongyuan.lottery.utils.ToastUtils;

import org.json.JSONException;
import org.json.JSONObject;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import butterknife.BindView;
import butterknife.OnClick;
import okhttp3.Call;

public class PlayallActivity extends BaseActivity {

    private String game_id;//游戏id
    private String play_id;//玩法id
    private String userId;
    private String tzmoney; //接受投注钱数
    private String zzhu;//总注数
    private String zhuiqi;//追期数

    private ArrayList<Shil> list = new ArrayList<>();


    @BindView(R.id.title_right)
    TextView titleRight;
    @BindView(R.id.layout_tab)
    TabLayout mTabLayout;
    @BindView(R.id.view_pager)
    ViewPager mViewPager;
    private int tag;
    private int curTab = 0;
    private int p=0;
    private int pos=0;
    private IndicatorDialog dialog;
    private List<String> mLists = new ArrayList<>();
    private List<Integer> mICons = new ArrayList<>();
    private SimpleFragmentPagerAdapter mAdapter;
    private List<Fragment> mFragments = new ArrayList<Fragment>();
    private List<String> tabTitles = new ArrayList<>();


    @Override
    public int getLayoutId() {
        return R.layout.activity_playall;
    }

    @Override
    public void initView(Bundle savedInstanceState) {
        for (int i = 0; i < tabTitles.size(); i++) {
            BetShowFragment fragment = new BetShowFragment(curTab);
            fragment.setTabPos(i);
            mFragments.add(fragment);
        }
        mAdapter = new SimpleFragmentPagerAdapter(getSupportFragmentManager(), tabTitles, mFragments);
        mViewPager.setAdapter(mAdapter);
        mTabLayout.setupWithViewPager(mViewPager);
        mTabLayout.setSmoothScrollingEnabled(true);
        mTabLayout.setTabMode(TabLayout.MODE_SCROLLABLE);
        //设置当前显示哪个标签页
        mViewPager.setCurrentItem(tag);
        mViewPager.addOnPageChangeListener(new ViewPager.OnPageChangeListener() {
            @Override
            public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {

            }

            @Override
            public void onPageSelected(int position) {
                //滑动监听加载数据，一次只加载一个标签页
                pos=position;
                ((BetShowFragment) mAdapter.getItem(position)).sendMessage(p);
            }

            @Override
            public void onPageScrollStateChanged(int state) {

            }
        });
    }

    @Override
    public void initData() {
        tzmoney = getIntent().getStringExtra("qian");

        userId = getIntent().getStringExtra("userid");
        game_id = getIntent().getStringExtra("game_id");
        play_id = getIntent().getStringExtra("play_id");
        zzhu = getIntent().getStringExtra("zzhu");
        zhuiqi = getIntent().getStringExtra("zhiqi");
        list = (ArrayList<Shil>) getIntent().getSerializableExtra("betlist");

        Log.e("++++总注数++",zzhu+"");

        String data = null;

        List<BetDataBean> lists = new ArrayList<>();
        for (int i = 0; i < list.size();i++){
            BetDataBean bet = new BetDataBean();
            bet.setCode(list.get(i).getHaoma());
            //bet.setCode(str);
            bet.setTimes(list.get(i).getBeishu());
            bet.setGame_id(game_id);
            bet.setPlay_id(play_id);
            double aDouble = Double.valueOf(list.get(i).getDanjia());
            int dj = (int)aDouble;
            int bs = Integer.valueOf(list.get(i).getBeishu());
            int money = dj * list.get(i).getZhushu() * bs;
            bet.setBetAmount(money+"");
            bet.setCurrency("1");
            bet.setReturnPer(list.get(i).getFandianl());
            bet.setBetCount(list.get(i).getZhushu()+"");
            Log.e("++++总注数++",list.get(i).getZhushu()+"");

            lists.add(bet);
        }

        Call call = LotteryClient.getInstance().getBet(userId,zzhu,tzmoney,lists.toString());
        call.enqueue(new UICallBack() {
            @Override
            public void onFailureUI(Call call, IOException e) {
                ToastUtils.showToast(PlayallActivity.this,e.getMessage());
            }

            @Override
            public void onResponseUI(Call call, String body) {
                Log.e("++++++++++",body);

                try {

                    JSONObject jsonObject = new JSONObject(body);
                    JSONObject errormsg = jsonObject.optJSONObject("errormsg");

                } catch (JSONException e) {
                    e.printStackTrace();
                }

            }
        });

        titleRight.setVisibility(View.VISIBLE);
        titleRight.setText("全部");
        tag = 0;
        curTab=0;
        pos=0;
        tabTitles.add("全部");
        tabTitles.add("中奖");
        tabTitles.add("未开奖");
        tabTitles.add("已开奖");





    }

    @OnClick({R.id.title_left,R.id.title_right})
    public void click(View v){
        switch (v.getId()){
            case R.id.title_left:
                finish();
                break;
            case R.id.title_right:
                showTopDialog(titleRight, 0.9f, IndicatorBuilder.GRAVITY_RIGHT);
                break;
        }
    }
    private void showTopDialog(View v, float v1, int gravityCenter) {
        mLists.clear();
        mICons.clear();
        mLists.add("全部");
        mLists.add("今天");
        mLists.add("近1周");
        mLists.add("近1个月");
        mLists.add("近3个月");
        Resources resources = getResources();
        DisplayMetrics dm = resources.getDisplayMetrics();
        int height = dm.heightPixels;
        int width = dm.widthPixels;
        dialog = new IndicatorBuilder(this)
                .width(300)
                .height((int) (height * 0.5))
                .ArrowDirection(IndicatorBuilder.TOP)
                .bgColor(Color.parseColor("#49484b"))
                .gravity(gravityCenter)
                .radius(18)
                .ArrowRectage(v1)
                .layoutManager(new LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false))
                .adapter(new BaseAdapter() {
                    @Override
                    public void onBindView(BaseViewHolder holder, int position) {
                        TextView tv = holder.getView(R.id.item_add);
                        tv.setText(mLists.get(position));
                        //tv.setCompoundDrawablesWithIntrinsicBounds(mICons.get(position), 0, 0, 0);

                        if (position == mLists.size() - 1) {
                            holder.setVisibility(R.id.item_line, BaseViewHolder.GONE);
                        } else {
                            holder.setVisibility(R.id.item_line, BaseViewHolder.VISIBLE);

                        }
                    }

                    @Override
                    public int getLayoutID(int position) {
                        return R.layout.item;
                    }

                    @Override
                    public boolean clickable() {
                        return true;
                    }

                    @Override
                    public void onItemClick(View v, int position) {
                        p= position;
                        ((BetShowFragment) mAdapter.getItem(pos)).sendMessage(p);
                        dialog.dismiss();
                        titleRight.setText(mLists.get(position));
                    }

                    @Override
                    public int getItemCount() {
                        return mLists.size();
                    }
                }).create();

        dialog.setCanceledOnTouchOutside(true);
        dialog.show(v);

    }
}
