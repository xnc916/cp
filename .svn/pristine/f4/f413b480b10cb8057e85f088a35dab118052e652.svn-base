package com.xiongyuan.lottery.mypage.fragment;


import android.content.Intent;
import android.os.Handler;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ListView;

import com.google.gson.Gson;
import com.lcodecore.tkrefreshlayout.RefreshListenerAdapter;
import com.lcodecore.tkrefreshlayout.TwinklingRefreshLayout;
import com.lcodecore.tkrefreshlayout.header.SinaRefreshView;
import com.xiongyuan.lottery.R;
import com.xiongyuan.lottery.base.BaseFragment;
import com.xiongyuan.lottery.base.Constant;
import com.xiongyuan.lottery.base.LotteryClient;
import com.xiongyuan.lottery.base.UICallBack;
import com.xiongyuan.lottery.bean.LoginEvent;
import com.xiongyuan.lottery.mypage.activity.PersonalActivity;
import com.xiongyuan.lottery.mypage.adapter.MyTeamAdapter;
import com.xiongyuan.lottery.mypage.bean.MyTeamBean;
import com.xiongyuan.lottery.mypage.bean.UserInfo;
import com.xiongyuan.lottery.utils.ToastUtils;
import com.zhy.http.okhttp.OkHttpUtils;
import com.zhy.http.okhttp.callback.Callback;

import org.greenrobot.eventbus.Subscribe;
import org.greenrobot.eventbus.ThreadMode;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import butterknife.BindView;
import okhttp3.Call;
import okhttp3.Response;

/**
 * Created by Administrator on 2017-05-12.
 */

public class FragmentMyTeam extends BaseFragment {
    @BindView(R.id.my_team_list_view)
    ListView listView;
    @BindView(R.id.refreshLayout)
    TwinklingRefreshLayout refreshLayout;
    private ArrayList<MyTeamBean> list;
    private MyTeamAdapter adapter;
    private String userId;
    private String dmaxfan;//高频返采点
    private String dminfan;//低频返采点
    @Override
    public int getLayoutId() {
        return R.layout.fragment_page_my_team;
    }

    @Override
    public void initView() {
        SinaRefreshView headerView = new SinaRefreshView(getActivity());
        headerView.setArrowResource(R.drawable.arrow);
        headerView.setTextColor(0xff745D5C);
        refreshLayout.setHeaderView(headerView);

        refreshLayout.setOnRefreshListener(new RefreshListenerAdapter() {
            @Override
            public void onRefresh(final TwinklingRefreshLayout refreshLayout) {
                new Handler().postDelayed(new Runnable() {
                    @Override
                    public void run() {
                        refreshLayout.finishRefreshing();
                    }
                }, 2000);
            }

            @Override
            public void onLoadMore(final TwinklingRefreshLayout refreshLayout) {
                new Handler().postDelayed(new Runnable() {
                    @Override
                    public void run() {
                        refreshLayout.finishLoadmore();
                    }
                }, 2000);
            }
        });

    }

    @Subscribe(sticky = true, threadMode = ThreadMode.MAIN)
    public void onShowDataEvent(LoginEvent event) {
        //将获取的数据展示在界面上
        userId = event.getUserId();

        getLowers(userId);


    }

    @Override
    public void onResume() {
        super.onResume();
        getLowers(userId);
    }

    @Override
    public void initData() {
        list = new ArrayList<>();
        adapter = new MyTeamAdapter(getActivity());
        listView.setAdapter(adapter);
        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                Intent intent = new Intent(getActivity(), PersonalActivity.class);
                intent.putExtra("userId",userId);
                intent.putExtra("id",list.get(position).getId());
                intent.putExtra("userName",list.get(position).getUsername());
                intent.putExtra("type",list.get(position).getType());
                intent.putExtra("maxRebate",list.get(position).getMaxRebate());
                intent.putExtra("minRebate",list.get(position).getMinRebate());
                intent.putExtra("date",list.get(position).getDate());
                intent.putExtra("onlineTime",list.get(position).getOnlineTime());
                intent.putExtra("frozenAmount",list.get(position).getFrozenAmount());
                intent.putExtra("usableAmount",list.get(position).getUsableAmount());

                intent.putExtra("dmax",dmaxfan);
                intent.putExtra("dmin",dminfan);



                startActivity(intent);
            }
        });
    }

    //用户列表
    public void getLowers(String userId) {
        Call call = LotteryClient.getInstance().getUserInfo(userId);
        call.enqueue(new UICallBack() {
            @Override
            public void onFailureUI(Call call, IOException e) {
                ToastUtils.showToast(getContext(),e.getMessage());
            }

            @Override
            public void onResponseUI(Call call, String body) {
                UserInfo userInfo = new Gson().fromJson(body,UserInfo.class);
                dmaxfan = userInfo.getResult().getMaxRebate();
                dminfan = userInfo.getResult().getMinRebate();

                Log.e("++++dmaxfan+++",dmaxfan);
                Log.e("++++dminfan+++",dminfan);

            }
        });
        if (list.size()>0) {
            list.clear();
        }
        OkHttpUtils.post()
                .url(Constant.URL)
                .addParams("action", "Users.getLowers")
                .addParams("user_id", userId)
                .addParams("page", "1")
                .build()
                .execute(new Callback<String>() {
                    @Override
                    public String parseNetworkResponse(Response response, int i) throws Exception {
                        String s = response.body().string();
                        return s;
                    }

                    @Override
                    public void onError(Call call, Exception e, int i) {
                        ToastUtils.showToast(getActivity(), "网络错误");

                    }

                    @Override
                    public void onResponse(String o, int i) {
                        Log.e("==-用户列表-==", o + "---");

                        try {
                            JSONObject jsonObject = new JSONObject(o);
                            String errormsg = jsonObject.optString("errormsg");
                            if (errormsg.equals("")) {
                                JSONObject result = jsonObject.optJSONObject("result");
                                JSONArray data = result.optJSONArray("data");
                                for (int j=0;j<data.length();j++){
                                    JSONObject object = data.optJSONObject(j);
                                    String id = object.optString("id");
                                    String username = object.optString("username");
                                    String usableAmount = object.optString("usableAmount");
                                    String frozenAmount = object.optString("frozenAmount");
                                    String addTime = object.optString("addTime");
                                    String date = stampToDate(addTime);
                                    String type = object.optString("type");
                                    String maxRebate = object.optString("maxRebate");
                                    if (maxRebate.equals("null")){
                                        maxRebate="";
                                    }
                                    String minRebate = object.optString("minRebate");
                                    if (minRebate.equals("null")){
                                        minRebate="";
                                    }
                                    String onlineTime = object.optString("onlineTime");
                                    list.add(new MyTeamBean(id,username,usableAmount,frozenAmount,type,date,maxRebate,minRebate,onlineTime));
                                }
                                adapter.refresh(list);

                            } else {
                                ToastUtils.showToast(getActivity(), errormsg);
                            }
                        } catch (JSONException e) {
                            e.printStackTrace();
                        }

                    }
                });
    }
    /*
    * 将时间戳转换为时间
    */
    public static String stampToDate(String s){
        String res;
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd");
        long lt = Long.valueOf(s);
        Date date = new Date(lt*1000);
        res = simpleDateFormat.format(date);
        return res;
    }
}
