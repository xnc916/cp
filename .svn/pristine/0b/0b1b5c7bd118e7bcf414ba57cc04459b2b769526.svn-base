package com.xiongyuan.lottery.homepage.fragment;

import android.content.Context;
import android.content.Intent;
import android.graphics.Color;
import android.util.Log;
import android.view.View;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.bigkoo.convenientbanner.ConvenientBanner;
import com.bigkoo.convenientbanner.holder.CBViewHolderCreator;
import com.bigkoo.convenientbanner.holder.Holder;
import com.paradoxie.autoscrolltextview.VerticalTextview;
import com.xiongyuan.lottery.LoginActivity;
import com.xiongyuan.lottery.R;
import com.xiongyuan.lottery.base.BaseFragment;
import com.xiongyuan.lottery.base.Constant;
import com.xiongyuan.lottery.bean.LoginEvent;
import com.xiongyuan.lottery.homepage.activity.TextItemActivity;
import com.xiongyuan.lottery.homepage.bean.NewsBean;
import com.xiongyuan.lottery.homepage.bean.TopImageBean;
import com.xiongyuan.lottery.homepage.view.FadingScrollView;
import com.xiongyuan.lottery.utils.ToastUtils;
import com.zhy.http.okhttp.OkHttpUtils;
import com.zhy.http.okhttp.callback.Callback;

import org.greenrobot.eventbus.Subscribe;
import org.greenrobot.eventbus.ThreadMode;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.util.ArrayList;

import butterknife.BindView;
import okhttp3.Call;
import okhttp3.Response;

public class HomeFragment extends BaseFragment {
    private ArrayList<TopImageBean> imgLists;
    @BindView(R.id.nac_layout)
    RelativeLayout layout;
    @BindView(R.id.nac_root)
    FadingScrollView fadingScrollView;
    @BindView(R.id.convenientBanner)
    ConvenientBanner convenientBanner;
    @BindView(R.id.title_name)
    TextView titleName;
    @BindView(R.id.text)
    VerticalTextview text;
    private ArrayList<String> titleLists;
    private ArrayList<String> titleList;
    private ArrayList<NewsBean> newsBeanList;
    private boolean isLogin = false;

    @Override
    public int getLayoutId() {
        return R.layout.fragment_main_home;
    }

    @Override
    public void initView() {
        titleName.setText("首页购彩");
        layout.setAlpha(0);
        fadingScrollView.setFadingView(layout);
        fadingScrollView.setFadingHeightView(convenientBanner);

        text.setTextList(titleList);//加入显示内容,集合类型
        text.setText(15, 15, Color.GRAY);//设置属性,具体跟踪源码
        text.setTextStillTime(3000);//设置停留时长间隔
        text.setAnimTime(300);//设置进入和退出的时间间隔

        //对单条文字的点击监听
        text.setOnItemClickListener(new VerticalTextview.OnItemClickListener() {
            @Override
            public void onItemClick(int position) {
                if (isLogin){
                    Intent intent=new Intent(getActivity(),TextItemActivity.class);
                    intent.putExtra("title",newsBeanList.get(position).getTitle());
                    intent.putExtra("content",newsBeanList.get(position).getContent());
                    startActivity(intent);
                }else{
                    Intent intent=new Intent(getActivity(), LoginActivity.class);
                    startActivity(intent);
                }

            }
        });


        if (convenientBanner!=null) {
            convenientBanner.setPages(new CBViewHolderCreator() {
                @Override
                public Object createHolder() {
                    return new LocalImageHolderView();
                }
            }, imgLists) //设置需要切换的View
                    .setPointViewVisible(true)    //设置指示器是否可见
                    //设置两个点图片作为翻页指示器，不设置则没有指示器，可以根据自己需求自行配合自己的指示器,不需要圆点指示器可用不设
                    .setPageIndicator(new int[]{R.mipmap.ic_page_indicator, R.mipmap.ic_page_indicator_focused})
                    //设置指示器位置（左、中、右）
                    .setPageIndicatorAlign(ConvenientBanner.PageIndicatorAlign.CENTER_HORIZONTAL)
                    .setManualPageable(true);//设置手动影响（设置了该项无法手动切换）

            if (!convenientBanner.isTurning()) {
                if (imgLists.size() > 1) {
                    convenientBanner.startTurning(4000);     //设置自动切换（同时设置了切换时间间隔）
                }
            }
        }
    }
    @Subscribe(sticky = true,threadMode = ThreadMode.MAIN)
    public void onShowDataEvent(LoginEvent event) {
        //将获取的数据展示在界面上
        isLogin = event.isLogin();
        if (isLogin) {
            //getNews(event.getUserId());
        } else {
            initViews();
        }
    }
    //获取系统公告
    private void getNews(String userId) {
        if (titleLists!=null){
            titleList.clear();
        }
        if (newsBeanList!=null){
            newsBeanList.clear();
        }
        OkHttpUtils.post()
                .url(Constant.URL)
                .addParams("action", "News._getNews")
                .addParams("user_id", userId)
                .build()
                .execute(new Callback<String>() {
                    @Override
                    public String parseNetworkResponse(Response response, int i) throws Exception {
                        String s = response.body().string();
                        return s;
                    }

                    @Override
                    public void onError(Call call, Exception e, int i) {
                        ToastUtils.showToast(getActivity(), "网络错误");
                    }

                    @Override
                    public void onResponse(String o, int i) {
                        Log.e("==-系统公告-==", o);
                        try {
                            JSONObject jsonObject = new JSONObject(o);
                            String errormsg = jsonObject.optString("errormsg");
                            if (errormsg.equals("")) {
                                JSONArray result = jsonObject.optJSONArray("result");
                                for (int j=0;j<result.length();j++){
                                    JSONObject object=result.getJSONObject(j);
                                    String id = object.optString("id");
                                    String title = object.optString("title");
                                    String content = object.optString("content");
                                    newsBeanList.add(new NewsBean(id,title,content));
                                }
                                for (NewsBean newsBean:newsBeanList){
                                    titleLists.add(newsBean.getTitle());
                                }
                                text.setTextList(titleLists);
                            } else {
                                ToastUtils.showToast(getActivity(), errormsg);
                            }
                        } catch (JSONException e) {
                            e.printStackTrace();
                        }

                    }
                });
    }

    private void initViews() {
        text.setTextList(titleList);
    }

    @Override
    public void initData() {
        newsBeanList=new ArrayList<>();
        titleList=new ArrayList<>();
        titleLists=new ArrayList<>();
        titleList.add("正在加载...");

        imgLists=new ArrayList<>();
        imgLists.add(new TopImageBean(R.mipmap.bbb));
        imgLists.add(new TopImageBean(R.mipmap.topimg));
    }

    private class LocalImageHolderView implements Holder<TopImageBean> {
        private ImageView imageView;
        @Override
        public View createView(Context context) {
            View view = View.inflate(context, R.layout.topimg_view, null);
            imageView = (ImageView) view.findViewById(R.id.top_img);
            imageView.setScaleType(ImageView.ScaleType.FIT_XY);
            return view;
        }

        @Override
        public void UpdateUI(Context context, int position, TopImageBean data) {
            /*//视频图片
            ImageLoader.getInstance().displayImage(data.getThumb(),
                    imageView, ImageLoaderOptions.list_options);*/
            imageView.setImageResource(data.getImg());
        }
    }

    //开始滚动
    @Override
    public void onResume() {
        super.onResume();
        text.startAutoScroll();

    }
    //停止滚动
    @Override
    public void onPause() {
        super.onPause();
        text.stopAutoScroll();
    }
}
